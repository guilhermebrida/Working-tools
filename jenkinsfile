pipeline {
    agent any
    stages {
        stage('Instalar Python') {
            steps {
                script {
                    sh 'sudo apt-get install -y python3-pip'
                    sh 'sudo apt-get install -y python3-poetry'
                    sh 'sudo apt install -y alien libaio1'
                    sh 'sudo apt-get install -y network-manager'

                }
            }
        }
        stage('Download do Oracle Client') {
            steps {
                sh '''
                    curl -o oracle-instantclient-basic-21.1.0.0.0-1.x86_64.rpm https://download.oracle.com/otn_software/linux/instantclient/211000/oracle-instantclient-basic-21.1.0.0.0-1.x86_64.rpm
                    curl -o oracle-instantclient-sqlplus-21.1.0.0.0-1.x86_64.rpm https://download.oracle.com/otn_software/linux/instantclient/211000/oracle-instantclient-sqlplus-21.1.0.0.0-1.x86_64.rpm
                '''
            }
        }
        stage('Conversão do pacote RPM para DEB') {
            steps {
                sh 'sudo alien -i oracle-instantclient-basic-21.1.0.0.0-1.x86_64.rpm'
                sh 'sudo alien -i oracle-instantclient-sqlplus-21.1.0.0.0-1.x86_64.rpm'
            }
        }
        stage('Configuração do ambiente Oracle Client') {
            steps {
                sh '''
                    export LD_LIBRARY_PATH=/usr/lib/oracle/21/client64/lib
                    export PATH=$PATH:/usr/lib/oracle/21/client64/bin
                '''
            }
        }
        stage('Rodar'){
            steps{
                script {
                    if (!fileExists('Working-tools')) {
                        sh 'git clone https://github.com/guilhermebrida/Working-tools.git'
                    } else {
                        echo 'O diretório já existe. Pulando a clonagem.'
                    }
                    sh 'cd Working-tools && git pull && chmod +x ./setup_vpn.sh && ./setup_vpn.sh'
                    sh 'cd Working-tools && poetry run python -m unittest ./Python_tools/test_aero.py'
                }
            }
        }
        
    }
}